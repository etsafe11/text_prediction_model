"Utah Beach",
"Omaha Beach",
"Gold Beach",
"Sword Beach"
))
data(mtcars)
library(plotly)
plot_ly(mtcars, x = hp, y = mpg, mode = "markers")
data(mtcars)
library(plotly)
plot_ly(mtcars, x = mtcars$hp, y = mtcars$mpg, mode = "markers")
# Chunk 1
data(mtcars)
library(plotly)
plot_ly(mtcars, x = mtcars$hp, y = mtcars$mpg, mode = "markers")
# Chunk 1
knitr::opts_chunk$set(echo = TRUE)
Sys.setenv("plotly_username"="etsafe11")
Sys.setenv("plotly_api_key"="••••••••••")
library(plotly)
p <- plot_ly(x = c(1, 2), y = c(1, 2))
plotly_POST(p, filename = "file1")
# Chunk 1
knitr::opts_chunk$set(echo = TRUE)
Sys.setenv("plotly_username"="etsafe11")
Sys.setenv("plotly_api_key"="99bbHq4K6xeVYQaedAHk")
library(plotly)
p <- plot_ly(midwest, x = ~percollege, color = ~state, type = "box")
api_create(p, filename = "r-docs/midwest-boxplots")
# Chunk 1
knitr::opts_chunk$set(echo = TRUE)
Sys.setenv("plotly_username"="etsafe11")
Sys.setenv("plotly_api_key"="99bbHq4K6xeVYQaedAHk")
library(plotly)
p <- plot_ly(midwest, x = ~percollege, color = ~state, type = "box")
api_create(p, filename = "midwest-boxplots")
# Chunk 1
knitr::opts_chunk$set(echo = TRUE)
Sys.setenv("plotly_username"="etsafe11")
Sys.setenv("plotly_api_key"="99bbHq4K6xeVYQaedAHk")
#library(plotly)
#p <- plot_ly(midwest, x = ~percollege, color = ~state, type = "box")
#api_create(p, filename = "midwest-boxplots")
data(mtcars)
library(plotly)
p <- plot_ly(mtcars, x = ~hp, y = ~mpg, mode = "markers")
api_create(p, filename = "mtcars_plot")
# Chunk 1
knitr::opts_chunk$set(echo = TRUE)
Sys.setenv("plotly_username"="etsafe11")
Sys.setenv("plotly_api_key"="99bbHq4K6xeVYQaedAHk")
#library(plotly)
#p <- plot_ly(midwest, x = ~percollege, color = ~state, type = "box")
#api_create(p, filename = "midwest-boxplots")
data(mtcars)
library(plotly)
p <- plot_ly(mtcars, x = ~hp, y = ~mpg, mode = "markers")
api_create(p, filename = "mtcars_plot")
# Chunk 1
knitr::opts_chunk$set(echo = FALSE)
Sys.setenv("plotly_username"="etsafe11")
Sys.setenv("plotly_api_key"="99bbHq4K6xeVYQaedAHk")
#library(plotly)
#p <- plot_ly(midwest, x = ~percollege, color = ~state, type = "box")
#api_create(p, filename = "midwest-boxplots")
# Chunk 2
data(mtcars)
library(plotly)
p <- plot_ly(mtcars, x = ~hp, y = ~mpg, mode = "markers")
api_create(p, filename = "mtcars_plot")
# Chunk 1
knitr::opts_chunk$set(include = FALSE)
Sys.setenv("plotly_username"="etsafe11")
Sys.setenv("plotly_api_key"="99bbHq4K6xeVYQaedAHk")
#library(plotly)
#p <- plot_ly(midwest, x = ~percollege, color = ~state, type = "box")
#api_create(p, filename = "midwest-boxplots")
# Chunk 2
data(mtcars)
library(plotly)
p <- plot_ly(mtcars, x = ~hp, y = ~mpg, mode = "markers")
api_create(p, filename = "mtcars_plot")
1+1
# Chunk 1
knitr::opts_chunk$set(include = FALSE)
Sys.setenv("plotly_username"="etsafe11")
Sys.setenv("plotly_api_key"="99bbHq4K6xeVYQaedAHk")
#library(plotly)
#p <- plot_ly(midwest, x = ~percollege, color = ~state, type = "box")
#api_create(p, filename = "midwest-boxplots")
# Chunk 2
data(mtcars)
library(plotly)
p <- plot_ly(mtcars, x = ~hp, y = ~mpg, mode = "markers")
api_create(p, filename = "mtcars_plot")
# Chunk 1
knitr::opts_chunk$set(include = FALSE)
Sys.setenv("plotly_username"="etsafe11")
Sys.setenv("plotly_api_key"="99bbHq4K6xeVYQaedAHk")
#library(plotly)
#p <- plot_ly(midwest, x = ~percollege, color = ~state, type = "box")
#api_create(p, filename = "midwest-boxplots")
# Chunk 2
data(mtcars)
library(plotly)
p <- plot_ly(mtcars, x = ~wt, y = ~mpg, mode = "markers")
p
api_create(p, filename = "mtcars_plot")
# Chunk 1
knitr::opts_chunk$set(include = TRUE)
Sys.setenv("plotly_username"="etsafe11")
Sys.setenv("plotly_api_key"="99bbHq4K6xeVYQaedAHk")
#library(plotly)
#p <- plot_ly(midwest, x = ~percollege, color = ~state, type = "box")
#api_create(p, filename = "midwest-boxplots")
# Chunk 2
data(mtcars)
library(plotly)
p <- plot_ly(mtcars, x = ~wt, y = ~mpg, mode = "markers")
p
api_create(p, filename = "mtcars_plot")
# Chunk 1
#knitr::opts_chunk$set(include = FALSE)
Sys.setenv("plotly_username"="etsafe11")
Sys.setenv("plotly_api_key"="99bbHq4K6xeVYQaedAHk")
#library(plotly)
#p <- plot_ly(midwest, x = ~percollege, color = ~state, type = "box")
#api_create(p, filename = "midwest-boxplots")
# Chunk 2
data(mtcars)
library(plotly)
p <- plot_ly(mtcars, x = ~wt, y = ~mpg, mode = "markers")
p
api_create(p, filename = "mtcars_plot")
knitr::opts_chunk$set(echo = FALSE)
summary(cars)
plot(pressure)
knitr::opts_chunk$set(echo = FALSE)
summary(cars)
#knitr::opts_chunk$set(include = FALSE)
Sys.setenv("plotly_username"="etsafe11")
Sys.setenv("plotly_api_key"="99bbHq4K6xeVYQaedAHk")
#library(plotly)
#p <- plot_ly(midwest, x = ~percollege, color = ~state, type = "box")
#api_create(p, filename = "midwest-boxplots")
data(mtcars)
library(plotly)
p <- plot_ly(mtcars, x = ~wt, y = ~mpg, mode = "markers")
p
api_create(p, filename = "mtcars_plot")
knitr::opts_chunk$set(echo = FALSE)
summary(cars)
#knitr::opts_chunk$set(include = FALSE)
Sys.setenv("plotly_username"="etsafe11")
Sys.setenv("plotly_api_key"="99bbHq4K6xeVYQaedAHk")
#library(plotly)
#p <- plot_ly(midwest, x = ~percollege, color = ~state, type = "box")
#api_create(p, filename = "midwest-boxplots")
data(mtcars)
library(plotly)
p <- plot_ly(mtcars, x = ~wt, y = ~mpg, mode = "markers")
p
api_create(p, filename = "mtcars_plot")
knitr::opts_chunk$set(echo = FALSE)
summary(cars)
#knitr::opts_chunk$set(include = FALSE)
Sys.setenv("plotly_username"="etsafe11")
Sys.setenv("plotly_api_key"="99bbHq4K6xeVYQaedAHk")
#library(plotly)
#p <- plot_ly(midwest, x = ~percollege, color = ~state, type = "box")
#api_create(p, filename = "midwest-boxplots")
data(mtcars)
library(plotly)
p <- plot_ly(mtcars, x = ~wt, y = ~mpg, mode = "markers")
p
api_create(p, filename = "mtcars_plot")
# Chunk 1
#knitr::opts_chunk$set(include = FALSE)
Sys.setenv("plotly_username"="etsafe11")
Sys.setenv("plotly_api_key"="99bbHq4K6xeVYQaedAHk")
#library(plotly)
#p <- plot_ly(midwest, x = ~percollege, color = ~state, type = "box")
#api_create(p, filename = "midwest-boxplots")
# Chunk 2
data(mtcars)
library(plotly)
p <- plot_ly(mtcars, x = ~wt, y = ~mpg, mode = "markers")
p
api_create(p, filename = "mtcars_plot")
knitr::opts_chunk$set(echo = FALSE)
#knitr::opts_chunk$set(include = FALSE)
Sys.setenv("plotly_username"="etsafe11")
Sys.setenv("plotly_api_key"="99bbHq4K6xeVYQaedAHk")
#library(plotly)
#p <- plot_ly(midwest, x = ~percollege, color = ~state, type = "box")
#api_create(p, filename = "midwest-boxplots")
data(mtcars)
library(plotly)
p <- plot_ly(mtcars, x = ~wt, y = ~mpg, mode = "markers")
p
api_create(p, filename = "mtcars_plot")
knitr::opts_chunk$set(echo = FALSE)
#knitr::opts_chunk$set(include = FALSE)
Sys.setenv("plotly_username"="etsafe11")
Sys.setenv("plotly_api_key"="99bbHq4K6xeVYQaedAHK")
#library(plotly)
#p <- plot_ly(midwest, x = ~percollege, color = ~state, type = "box")
#api_create(p, filename = "midwest-boxplots")
data(mtcars)
library(plotly)
p <- plot_ly(mtcars, x = ~wt, y = ~mpg, mode = "markers")
p
api_create(p, filename = "mtcars_plot")
knitr::opts_chunk$set(echo = FALSE)
#knitr::opts_chunk$set(include = FALSE)
Sys.setenv("plotly_username"="etsafe11")
Sys.setenv("plotly_api_key"="99bbHq4K6xeVYQaedAHk")
#library(plotly)
#p <- plot_ly(midwest, x = ~percollege, color = ~state, type = "box")
#api_create(p, filename = "midwest-boxplots")
data(mtcars)
library(plotly)
p <- plot_ly(mtcars, x = ~wt, y = ~mpg, mode = "markers")
p
api_create(p, filename = "mtcars_plot")
source('C:/Users/v-eritho/Desktop/RScripts/leaflet_normandy.R', echo=TRUE)
p <- plot_ly(mtcars, x = ~wt, y = ~mpg, mode = "markers")
class(p)
# Building an n-gram text prediction model from scratch.
setwd("C:/Users/v-eritho/Desktop/text_prediction_model")
library(dplyr)
library(readr)
library(rlang)
library(mnormt)
library(tidytext)
library(quanteda)
library(readtext)
library(topicmodels)
library(ggplot2)
library(qdapDictionaries)
library(qdapRegex)
library(qdapTools)
library(RColorBrewer)
library(NLP)
library(tm)
library(SnowballC)
library(slam)
library(sqldf)
library(data.table)
library(stringi)
library(shiny)
# The below data.table objects are inputs to our model.
# To save many hours of processing time, load them from local directory.
# load("two_grams_tidy_500000.RData")
# load("three_grams_tidy_400000.RData")
# load("four_grams_tidy_300000.RData")
# load("five_grams_tidy_300000.RData")
# load("six_grams_tidy_300000.RData")
load("input_training_750000.RData")
us_blogs <- read_lines("en_US.blogs.txt")
us_news <- read_lines("en_US.news.txt")
us_twitter <- read_lines("en_US.twitter.txt")
# write.csv(sample_us_blogs, file = "sample_us_blogs.csv")
# read.csv("sample_us_blogs.xls", header = FALSE)
# Convert our dataframe to a corpus object
us_blogs_corpus <- corpus(us_blogs)
us_news_corpus <- corpus(us_news)
us_twitter_corpus <- corpus(us_twitter)
# Add document-level variables (docvars) for blogs, news and twitter
docvars(us_blogs_corpus, field = "source") <- rep("blogs", times = nrow(us_blogs_corpus$documents))
docvars(us_news_corpus, field = "source") <- rep("news", times = nrow(us_news_corpus$documents))
docvars(us_twitter_corpus, field = "source") <- rep("twitter", times = nrow(us_twitter_corpus$documents))
# Merge the three data sources into a single corpus
us_corpus <- us_blogs_corpus + us_news_corpus + us_twitter_corpus
# 35% sample
set.seed(555)
sample_us_corpus <- corpus_sample(us_corpus,
size = round(.35 * nrow(us_corpus$documents)))
training_us_corpus <- corpus_subset(sample_us_corpus,
1:ndoc(sample_us_corpus) %in% 1:1000000)
testing_us_corpus <- corpus_subset(sample_us_corpus,
1:ndoc(sample_us_corpus) %in% 1000001:1300000)
validation_us_corpus <- corpus_subset(sample_us_corpus,
1:ndoc(sample_us_corpus) %in% 1300001:1450000)
#us_blogs <- readtext("en_US.blogs.txt", text_field = 1)
us_blogs <- read_lines("en_US.blogs.txt")
us_news <- read_lines("en_US.news.txt")
us_twitter <- read_lines("en_US.twitter.txt")
# Convert our dataframe to a corpus object
us_blogs_corpus <- corpus(us_blogs)
us_news_corpus <- corpus(us_news)
us_twitter_corpus <- corpus(us_twitter)
# Add document-level variables (docvars) for blogs, news and twitter
docvars(us_blogs_corpus, field = "source") <- rep("blogs", times = nrow(us_blogs_corpus$documents))
docvars(us_news_corpus, field = "source") <- rep("news", times = nrow(us_news_corpus$documents))
docvars(us_twitter_corpus, field = "source") <- rep("twitter", times = nrow(us_twitter_corpus$documents))
# Merge the three data sources into a single corpus
us_corpus <- us_blogs_corpus + us_news_corpus + us_twitter_corpus
# 35% sample
set.seed(555)
sample_us_corpus <- corpus_sample(us_corpus,
size = round(.35 * nrow(us_corpus$documents)))
training_us_corpus <- corpus_subset(sample_us_corpus,
1:ndoc(sample_us_corpus) %in% 1:1000000)
testing_us_corpus <- corpus_subset(sample_us_corpus,
1:ndoc(sample_us_corpus) %in% 1000001:1300000)
validation_us_corpus <- corpus_subset(sample_us_corpus,
1:ndoc(sample_us_corpus) %in% 1300001:1450000)
# Tokenize the corpus, removing punctuation etc
testing_us_tokens <- tokens(testing_us_corpus, what = "word",
remove_numbers = TRUE, remove_punct = TRUE,
remove_symbols = TRUE, remove_separators = TRUE,
remove_twitter = TRUE, remove_hyphens = TRUE,
remove_url = TRUE, ngrams = 1L, skip = 0L, concatenator = "_")
y <- 0
for (k in 1:nrow(six_grams_tidy_testing[1:50, ])) {
#toks <- tokens(six_grams_tidy_testing[4,]$`n-1`, concatenator = "_")
toks <- stri_split_fixed(six_grams_tidy_testing[k, ]$`n-1`, pattern = "_")
toks <- tail(unlist(toks), 8)
toks_list <- tokens_skipgrams(toks,
n = 1:length(toks),
skip = 0:4,
concatenator = "_")
toks_list <- rev(toks_list)
last <- toks[length(toks)]
toks_list <- toks_list[grep(last, toks_list)]
x <- NULL
for (i in 1:length(toks_list)) {
for(j in 1:length(input_training)) {
if (nrow(input_training[which(input_training$`n-1` == toks_list[i]), ]) != 0) {
if(six_grams_tidy_testing[k, ]$n %in%
input_training[which(input_training$`n-1` == toks_list[i]), ]$n) {
x <- c(x, TRUE)
}
else {
x <- c(x, FALSE)
}
break
}
break
}
}
if(sum(x) > 0) { y <- y + 1 }
}
y
# Make 2-grams frequency table
two_temp_testing <- tokens_ngrams(testing_us_tokens, n = 2L, skip = 0L, concatenator = "_")
two_temp_testing <- as.data.table(unlist(two_temp_testing))
two_temp_testing <- two_temp_testing[sample(nrow(two_temp_testing), 50000)]
save(two_temp_testing, file = "two_temp_testing.RData")
x <- NULL
y <- NULL
z <- NULL
two_grams_tidy_testing <- NULL
for (i in 1:nrow(two_temp_testing[, 1])) {
z <- list(strsplit(as.character(two_temp_testing[i, 1]), split = "_")[[1]][1])
z <- strsplit(stri_join_list(z, sep = "_", collapse = TRUE), " ")[[1]]
x <- rbind(x, z)
}
for (i in 1:nrow(two_temp_testing[, 1])) {
z <- unlist(strsplit(as.character(two_temp_testing[i, 1]), split = "_"))[2]
y <- rbind(y, z)
}
two_grams_tidy_testing <- data.table(x, y)
names(two_grams_tidy_testing) <- c("n-1", "n")
save(two_grams_tidy_testing, file = "two_grams_tidy_testing_50000.RData")
# Make 3-grams frequency table
three_temp_testing <- tokens_ngrams(testing_us_tokens, n = 3L, skip = 0L, concatenator = "_")
three_temp_testing <- as.data.table(unlist(three_temp_testing))
three_temp_testing <- three_temp_testing[sample(nrow(three_temp_testing), 50000)]
save(three_temp_testing, file = "three_temp_testing.RData")
x <- NULL
y <- NULL
z <- NULL
three_grams_tidy_testing <- NULL
for (i in 1:nrow(three_temp_testing[, 1])) {
z <- list(strsplit(as.character(three_temp_testing[i, 1]), split = "_")[[1]][1:2])
z <- strsplit(stri_join_list(z, sep = "_", collapse = TRUE), " ")[[1]]
x <- rbind(x, z)
}
for (i in 1:nrow(three_temp_testing[, 1])) {
z <- unlist(strsplit(as.character(three_temp_testing[i, 1]), split = "_"))[3]
y <- rbind(y, z)
}
three_grams_tidy_testing <- data.table(x, y)
names(three_grams_tidy_testing) <- c("n-1", "n")
save(three_grams_tidy_testing, file = "three_grams_tidy_testing_50000.RData")
# Make 4-grams frequency table
four_temp_testing <- tokens_ngrams(testing_us_tokens, n = 4L, skip = 0L, concatenator = "_")
four_temp_testing <- as.data.table(unlist(four_temp_testing))
four_temp_testing <- four_temp_testing[sample(nrow(four_temp_testing), 50000)]
save(four_temp_testing, file = "four_temp_testing.RData")
x <- NULL
y <- NULL
z <- NULL
four_grams_tidy_testing <- NULL
for (i in 1:nrow(four_temp_testing[, 1])) {
z <- list(strsplit(as.character(four_temp_testing[i, 1]), split = "_")[[1]][1:3])
z <- strsplit(stri_join_list(z, sep = "_", collapse = TRUE), " ")[[1]]
x <- rbind(x, z)
}
for (i in 1:nrow(four_temp_testing[, 1])) {
z <- unlist(strsplit(as.character(four_temp_testing[i, 1]), split = "_"))[4]
y <- rbind(y, z)
}
four_grams_tidy_testing <- data.table(x, y)
names(four_grams_tidy_testing) <- c("n-1", "n")
save(four_grams_tidy_testing, file = "four_grams_tidy_testing_50000.RData")
# Make 5-grams frequency table
five_temp_testing <- tokens_ngrams(testing_us_tokens, n = 5L, skip = 0L, concatenator = "_")
five_temp_testing <- as.data.table(unlist(five_temp_testing))
five_temp_testing <- five_temp_testing[sample(nrow(five_temp_testing), 50000)]
save(five_temp_testing, file = "five_temp_testing.RData")
x <- NULL
y <- NULL
z <- NULL
five_grams_tidy_testing <- NULL
for (i in 1:nrow(five_temp_testing[, 1])) {
z <- list(strsplit(as.character(five_temp_testing[i, 1]), split = "_")[[1]][1:4])
z <- strsplit(stri_join_list(z, sep = "_", collapse = TRUE), " ")[[1]]
x <- rbind(x, z)
}
for (i in 1:nrow(five_temp_testing[, 1])) {
z <- unlist(strsplit(as.character(five_temp_testing[i, 1]), split = "_"))[5]
y <- rbind(y, z)
}
five_grams_tidy_testing <- data.table(x, y)
names(five_grams_tidy_testing) <- c("n-1", "n")
save(five_grams_tidy_testing, file = "five_grams_tidy_testing_50000.RData")
# Make 6-grams frequency table
six_temp_testing <- tokens_ngrams(testing_us_tokens, n = 6L, skip = 0L, concatenator = "_")
six_temp_testing <- as.data.table(unlist(six_temp_testing))
six_temp_testing <- six_temp_testing[sample(nrow(six_temp_testing), 50000)]
save(six_temp_testing, file = "six_temp_testing.RData")
x <- NULL
y <- NULL
z <- NULL
six_grams_tidy_testing <- NULL
for (i in 1:nrow(six_temp_testing[, 1])) {
z <- list(strsplit(as.character(six_temp_testing[i, 1]), split = "_")[[1]][1:5])
z <- strsplit(stri_join_list(z, sep = "_", collapse = TRUE), " ")[[1]]
x <- rbind(x, z)
}
for (i in 1:nrow(six_temp_testing[, 1])) {
z <- unlist(strsplit(as.character(six_temp_testing[i, 1]), split = "_"))[6]
y <- rbind(y, z)
}
six_grams_tidy_testing <- data.table(x, y)
names(six_grams_tidy_testing) <- c("n-1", "n")
save(six_grams_tidy_testing, file = "six_grams_tidy_testing_50000.RData")
y <- 0
for (k in 1:nrow(six_grams_tidy_testing[1:50, ])) {
#toks <- tokens(six_grams_tidy_testing[4,]$`n-1`, concatenator = "_")
toks <- stri_split_fixed(six_grams_tidy_testing[k, ]$`n-1`, pattern = "_")
toks <- tail(unlist(toks), 8)
toks_list <- tokens_skipgrams(toks,
n = 1:length(toks),
skip = 0:4,
concatenator = "_")
toks_list <- rev(toks_list)
last <- toks[length(toks)]
toks_list <- toks_list[grep(last, toks_list)]
x <- NULL
for (i in 1:length(toks_list)) {
for(j in 1:length(input_training)) {
if (nrow(input_training[which(input_training$`n-1` == toks_list[i]), ]) != 0) {
if(six_grams_tidy_testing[k, ]$n %in%
input_training[which(input_training$`n-1` == toks_list[i]), ]$n) {
x <- c(x, TRUE)
}
else {
x <- c(x, FALSE)
}
break
}
break
}
}
if(sum(x) > 0) { y <- y + 1 }
}
y
y <- 0
for (k in 1:nrow(six_grams_tidy_testing[1:100, ])) {
#toks <- tokens(six_grams_tidy_testing[4,]$`n-1`, concatenator = "_")
toks <- stri_split_fixed(six_grams_tidy_testing[k, ]$`n-1`, pattern = "_")
toks <- tail(unlist(toks), 8)
toks_list <- tokens_skipgrams(toks,
n = 1:length(toks),
skip = 0:4,
concatenator = "_")
toks_list <- rev(toks_list)
last <- toks[length(toks)]
toks_list <- toks_list[grep(last, toks_list)]
x <- NULL
for (i in 1:length(toks_list)) {
for(j in 1:length(input_training)) {
if (nrow(input_training[which(input_training$`n-1` == toks_list[i]), ]) != 0) {
if(six_grams_tidy_testing[k, ]$n %in%
input_training[which(input_training$`n-1` == toks_list[i]), ]$n) {
x <- c(x, TRUE)
}
else {
x <- c(x, FALSE)
}
break
}
break
}
}
if(sum(x) > 0) { y <- y + 1 }
}
y
